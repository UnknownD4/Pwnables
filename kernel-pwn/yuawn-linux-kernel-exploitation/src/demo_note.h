#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <stdint.h>
#include <syscall.h>
#include <string.h>
#include <sys/msg.h>
#include <sys/ipc.h>

#define DEMO_ADD            0xFACEB00C
#define DEMO_DELETE         0xC0FFEE
#define DEMO_READ           0xAAAAAAAA
#define DEMO_EDIT           0xCCCCCCCC
#define DEMO_OVERFLOW       0xDEADBEEF
#define DEMO_USERFAULTFD    0x88888888
#define DEMO_MSG_MSG        0x7777777
#define DEMO_GADGET         0x666666

struct Request{
    char *arg1;
    union Arg2{
        size_t size;
        unsigned int index;
    } arg2;
} req;

struct Note{
  //  char title[0x30];
    size_t size;
    char* data;
} fake_note;

struct MsgBuf{
    long mtype;
    char mtext[0x10000]; // 65536
} msgbuf;


void add_note( int fd, size_t size ){
    req.arg2.size = size;
    if( ioctl(fd, DEMO_ADD, &req) < 0 ){
        puts("add error");
    }
}

void delete_note( int fd, unsigned int index ){
    req.arg2.index = index;
    if( ioctl(fd, DEMO_DELETE, &req) < 0 ){
        puts("delete error");
    }
}

void read_note( int fd, unsigned int index , char *data ){
    req.arg1 = data;
    req.arg2.index = index;
    if( ioctl(fd, DEMO_READ, &req) < 0 ){
        puts("read error");
    }
}

void edit_note( int fd, unsigned int index , char *data ){
    req.arg1 = data;
    req.arg2.index = index;
    if( ioctl(fd, DEMO_EDIT, &req) < 0 ){
        puts("edit error");
    }
}

void demo_overflow( int fd, char *data ){
    req.arg1 = data;
    if( ioctl(fd, DEMO_OVERFLOW, &req) < 0 ) {
        puts("overflow error");
    }
}

void demo_userfaultfd( int fd, char *data, uint64_t index ){
    req.arg1 = data;
    req.arg2.index = index;
    if( ioctl(fd, DEMO_USERFAULTFD, &req) < 0 ) {
        puts("userfaultfd error");
    }
}
void demo_msg_msg( int fd, uint64_t index ){
    req.arg2.index = index;
    if( ioctl(fd, DEMO_MSG_MSG, &req) < 0 ) {
        puts("msg_msg error");
    }
}
/*int msg_open(){
    int qid;
    if((qid = msgget(IPC_PRIVATE, 0644 | IPC_CREAT)) == -1){puts("[-] Failed to create msg queue.."); return -1;}
    return qid;
}
/*int msg_send(int qid, char *data, uint64_t size){
    msgbuf.mtype = 1; //
    memcpy(msgbuf.mtext, &data[0x30], size - 0x30); 
    if(msgsnd(qid, &msgbuf, size - 0x30, 0) == -1){puts("[-] Failed to send msg.."); return -1;}
    return 0;
}
int msg_free(int qid, uint64_t size){
    msgbuf.mtype = 1; //
    if(msgrcv(qid, &msgbuf, size - 0x30, 1, 0) == -1){puts("[-] Failed to send msg.."); return -1;}
    return 0;
}*/
